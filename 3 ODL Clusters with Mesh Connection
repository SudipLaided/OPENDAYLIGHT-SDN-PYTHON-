#!/usr/bin/python
from mininet.cli import CLI
from mininet.node import Controller, OVSKernelSwitch, RemoteController
from mininet.log import setLogLevel, info
from mininet.net import Mininet
from functools import partial
def tyNet():
	OVSSwitch13 = partial( OVSKernelSwitch, protocols='OpenFlow13')
	net = Mininet(controller=None, switch=OVSSwitch13)
	c1 = net.addController('c1', controller=RemoteController, ip="192.168.244.140")
    	c2 = net.addController('c2', controller=RemoteController, ip="192.168.244.133")
	c3 = net.addController('c3', controller=RemoteController, ip="192.168.244.134")
	h1 = net.addHost( 'h1', ip='10.0.0.1' )
	h2 = net.addHost( 'h2', ip='10.0.0.2' )
	h6 = net.addHost( 'h6', ip='10.0.0.6' )
	h7 = net.addHost( 'h7', ip='10.0.0.7' )
	h12 = net.addHost( 'h12', ip='10.0.0.12' )
	h13 = net.addHost( 'h13', ip='10.0.0.13' )
	s1 = net.addSwitch( 's1' )
	s2 = net.addSwitch( 's2' )
	s3 = net.addSwitch( 's3' )
	s4 = net.addSwitch( 's4' )
	s5 = net.addSwitch( 's5' )
	s6 = net.addSwitch( 's6' )
	net.addLink(s1, s2 )
	net.addLink(s1, s3 )
	net.addLink(s1, s4 )
	net.addLink(s2, s5 )
	net.addLink(s2, s6 )
	net.addLink(s3, h1 )
	net.addLink(s3, h2 )
	net.addLink(s4, h6 )
	net.addLink(s5, h7 )
	net.addLink(s6, h12 )
	net.addLink(s6, h13 )
	
	c1.start()
    	c2.start()
    	c3.start()
	
	s1.start([c1,c2,c3])
	s2.start([c1,c2,c3])
	s3.start([c1,c2,c3])
	s4.start([c1,c2,c3])
	s5.start([c1,c2,c3])
	s6.start([c1,c2,c3])
	
	net.start()
	CLI( net )
	net.stop()
if __name__ == '__main__':
	setLogLevel( 'info' ) 
	tyNet()
